{"version":3,"sources":["catRequests.js","htmlElements.js","httpRequests.js","main.js"],"names":["fetchDataWithTimeout","createCardElement","catAPIKey","async","response","await","timeout","error","console","loadImage","url","Promise","resolve","reject","image","Image","src","onload","onerror","Error","loadCatImages","imagesPromises","fetchCatImagesData","cat","allSettled","forEach","value","catsContainerElement","document","getElementById","catCardContainer","classList","createElement","catCardBody","add","catCardImage","createCardImageElement","catCard","alt","let","createCardElements","appendChild","resource","options","controller","AbortController","setTimeout","abort","signal","clearTimeout","timeoutId","json","fetch"],"mappings":"OACSA,oBAA+C,KAAnB,2BAC5BC,iBAA4C,KAAnB,oBAKlC,MAAAC,UAAA,eACAC,eAEcC,qBADV,IAEI,OADsJC,MAAAL,qBAAA,6EAAAE,UAAA,CAAAI,QAAA,GAAA,CAAA,CAI1J,CAFE,MAAOC,GACLC,QAAQD,MAAM,uBAAwBA,CAAM,CAChD,CACJ,CAGA,SAASE,UAAUC,GACf,OAAO,IAAIC,QAASC,CAAAA,EAASC,KACzB,MAAMC,EAAYC,IAAAA,MAClBD,EAASE,IAAMN,EACfI,EAAMG,OAAS,IAAML,EAAQE,CAAM,EACnCA,EAAMI,QAAU,IAAML,EAAWM,IAAAA,MAAO,6BAAgCT,CAAG,CAAA,CAC7E,CAAA,CACN,CAGOP,eAAeiB,gBAClB,IACI,IACMC,GADOhB,MAAMiB,mBAAsB,IACPC,IAAGA,GAAKd,UAAcC,EAAKA,GAAA,CAAA,GAC9CL,MAAMM,QAAQa,WAAWH,CAAe,GAChDI,QAAQX,GAASb,kBAAkBa,EAAMY,KAAO,CAAA,CAG3D,CAFE,MAAOnB,GACLC,QAAQD,MAAMA,CAAM,CACxB,CACJ,QATsBa,aAStB;ACpCA,MAAMO,qBAAuBC,SAASC,eAAe,gBAAgB,EAIrE,SACQC,qBACJA,IAAAA,EAAiBC,SAAcC,cAAY,KAAU,EAKjDC,GAHJH,EAAcF,UAASI,IAAAA,WAAoB,WAAA,OAAA,UAAA,MAAA,EAG5BJ,SAAGA,cAASI,KAAc,GAI7CC,GAHIA,EAAAA,UAAYF,IAAUG,OAAI,YAAmB,WAAA,UAAA,QAAA,QAAA,EAGjDN,SAAAI,cAAA,KAAA,GAIIG,OAFJF,EAASG,UAAAA,IAAAA,YAAuBD,KAAc,EAE1CA,CAAAA,EAAyBE,EAAAJ,EAJ7B,CAEA,SAASG,uBAAuBD,GAW5BF,OAJJE,EAAAJ,UAAAG,IAAA,YAAA,iBAAA,QAAA,QAAA,SAAA,SAAA,cAAA,EACAC,EAAOG,IAAerC,OAGlBgC,CANJ,CAaA9B,eAAAF,kBAAAS,GATI6B,GAAI,CAACT,EAAkBO,EAASJ,GAAeO,mBAAmB,EAElEP,EAAYQ,YAAYL,uBAAuB1B,CAAG,CAAC,EAEnD2B,EAAQI,YAAYR,CAAW,EAE/BH,EAAiBW,YAAYJ,CAAO,EAEpCV,qBAAqBc,YAAYX,CAAgB,CACrD,QAAA7B,iBAAA;ACnCOE,eAAeH,qBAAqB0C,EAAUC,EAAU,IAC3D,IACI,GAAM,CAAArC,QAAAA,EAAA,GAAA,EAAAqC,EAACrC,MAAOsC,EAAG,IAAAC,gBAAQF,IAAAA,EAAOG,WAAA,IAAAF,EAAAG,MAAAzC,CAAA,EAC1BsC,EAAavC,MAAIwC,MAAAA,EAAiB,CAAA,GAAAF,EAAAK,OAAAJ,EAAAI,MAAA,CAAA,EAExC,OADAC,aAAeC,CAAGJ,EACZ1C,EAAW+C,KAAMC,CACvBH,CADyC,MAAGN,GAASK,QAAQJ,MAAAA,uBAAWI,CAAAA,CACxEC,CAMR,QAZsBjD,oBAYtB;OCbSoB,aAAuC,KAAlB,mBAK9BA,cAAc","file":"bundle.min.js","sourcesContent":["//imports\nimport { fetchDataWithTimeout } from \"./httpRequests.js\";\nimport { createCardElement } from \"./htmlElements.js\";\n\n\nconst catAPIKey = \"YOUR_API_KEY\";\n\n//Get Cats Data\nasync function fetchCatImagesData() {\n    try {\n        const response = await fetchDataWithTimeout(`https://api.thecatapi.com/v1/images/search?limit=8&breed_ids=beng&api_key=${catAPIKey}`, {timeout: 6000});\n        return response;\n    } catch (error) {\n        console.error('Error fetching cats:', error);\n    }\n}\n\n//Load cat image\nfunction loadImage(url) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.src = url;\n        image.onload = () => resolve(image);\n        image.onerror = () => reject(new Error(`Failed to load image from ${url}`));\n    });\n}\n\n//Load cat images in parallel\nexport async function loadCatImages() {\n    try {\n        const cats = await fetchCatImagesData(); //(3) [{…}, {…}, {…}]{breads: [{weight, id, name}], url}\n        const imagesPromises = cats?.map((cat) => loadImage(cat.url));\n        const images = await Promise.allSettled(imagesPromises);\n        images.forEach(image => createCardElement(image.value));\n    } catch (error) {\n        console.error(error);\n    } \n}\n","//Get Elements\nconst catsContainerElement = document.getElementById('cats-container');\n\n\n//Create HTML Elements\nfunction createCardElements() {\n    let catCardContainer = document.createElement('div');\n    catCardContainer.classList.add('col-lg-3', 'col-md-6', 'mb-4', 'mb-lg-0', 'mt-4');\n\n    let catCard = document.createElement('div');\n    catCard.classList.add('card', 'shadow-sm', 'border-0', 'rounded', 'h-100', 'mh-100');\n\n    let catCardBody = document.createElement('div');\n    catCardBody.classList.add('card-body', 'p-0');\n\n    return [catCardContainer, catCard, catCardBody]; \n}\n\nfunction createCardImageElement(catCardImage) {\n    catCardImage.classList.add('img-fluid', 'd-inline-block', 'w-100', 'h-100', 'mw-100', 'mh-100','card-img-top');\n    catCardImage.alt = 'meow';\n\n    return catCardImage;\n}\n\n//Append all elements to HTML\nexport async function createCardElement(url) {\n    let [catCardContainer, catCard, catCardBody] = createCardElements();\n\n    catCardBody.appendChild(createCardImageElement(url));\n\n    catCard.appendChild(catCardBody);\n\n    catCardContainer.appendChild(catCard);\n\n    catsContainerElement.appendChild(catCardContainer);\n}\n","//Make Request\nexport async function fetchDataWithTimeout(resource, options = {}) {\n    try {\n        const {timeout = 8000} = options;\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=> controller.abort , timeout);\n        const response = await fetch(resource, { ...options, signal: controller.signal });\n        clearTimeout(timeoutId);\n        return response.json();\n    } catch (error) {\n        console.error('Error fetching cats:', error);\n        //TODO:request recovery\n    }\n}","import { loadCatImages } from \"./catRequests.js\";\n\n\n\n\nloadCatImages();\n\n"]}