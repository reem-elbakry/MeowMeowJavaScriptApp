{"version":3,"sources":["catRequests.js"],"names":["fetchDataWithTimeout","createCardElement","catAPIKey","async","response","await","timeout","error","console","loadImage","url","Promise","resolve","reject","image","Image","src","onload","onerror","Error","loadCatImages","imagesPromises","fetchCatImagesData","cat","allSettled","forEach","value"],"mappings":"OACSA,oBAA4C,KAAhB,wBAC5BC,iBAAyC,KAAhB,iBAKlC,MAAAC,UAAA,wEACAC,eAEcC,qBADV,IAEI,OADsJC,MAAAL,qBAAA,6EAAAE,UAAA,CAAAI,QAAA,GAAA,CAAA,CAI1J,CAFE,MAAOC,GACLC,QAAQD,MAAM,uBAAwBA,CAAM,CAChD,CACJ,CAGA,SAASE,UAAUC,GACf,OAAO,IAAIC,QAASC,CAAAA,EAASC,KACzB,MAAMC,EAAYC,IAAAA,MAClBD,EAASE,IAAMN,EACfI,EAAMG,OAAS,IAAML,EAAQE,CAAM,EACnCA,EAAMI,QAAU,IAAML,EAAWM,IAAAA,MAAO,6BAAgCT,CAAG,CAAA,CAC7E,CAAA,CACN,CAGOP,eAAeiB,gBAClB,IACI,IACMC,GADOhB,MAAMiB,mBAAsB,IACPC,IAAGA,GAAKd,UAAcC,EAAKA,GAAA,CAAA,GAC9CL,MAAMM,QAAQa,WAAWH,CAAe,GAChDI,QAAQX,GAASb,kBAAkBa,EAAMY,KAAO,CAAA,CAG3D,CAFE,MAAOnB,GACLC,QAAQD,MAAMA,CAAM,CACxB,CACJ,QATsBa,aAStB","file":"catRequests.min.js","sourcesContent":["//imports\nimport { fetchDataWithTimeout } from \"./httpRequests\";\nimport { createCardElement } from \"./htmlElements\";\n\n\nconst catAPIKey = \"live_DPgbJpjNWbrAu2xinnvSziQZAJeXyee7x7Adouk6C54t7VrGFoeYgey1lUqFWub8\";\n\n//Get Cats Data\nasync function fetchCatImagesData() {\n    try {\n        const response = await fetchDataWithTimeout(`https://api.thecatapi.com/v1/images/search?limit=8&breed_ids=beng&api_key=${catAPIKey}`, {timeout: 6000});\n        return response;\n    } catch (error) {\n        console.error('Error fetching cats:', error);\n    }\n}\n\n//Load cat image\nfunction loadImage(url) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.src = url;\n        image.onload = () => resolve(image);\n        image.onerror = () => reject(new Error(`Failed to load image from ${url}`));\n    });\n}\n\n//Load cat images in parallel\nexport async function loadCatImages() {\n    try {\n        const cats = await fetchCatImagesData(); //(3) [{…}, {…}, {…}]{breads: [{weight, id, name}], url}\n        const imagesPromises = cats?.map((cat) => loadImage(cat.url));\n        const images = await Promise.allSettled(imagesPromises);\n        images.forEach(image => createCardElement(image.value));\n    } catch (error) {\n        console.error(error);\n    } \n}\n"]}