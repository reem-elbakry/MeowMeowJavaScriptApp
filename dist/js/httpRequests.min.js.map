{"version":3,"sources":["httpRequests.js"],"names":["async","fetchDataWithTimeout","resource","options","timeout","controller","AbortController","setTimeout","abort","await","signal","clearTimeout","timeoutId","response","json","fetch"],"mappings":"AACOA,eAAeC,qBAAqBC,EAAUC,EAAU,IAC3D,IACI,GAAM,CAAAC,QAAAA,EAAA,GAAA,EAAAD,EAACC,MAAOC,EAAG,IAAAC,gBAAQH,IAAAA,EAAOI,WAAA,IAAAF,EAAAG,MAAAJ,CAAA,EAC1BC,EAAaI,MAAIH,MAAAA,EAAiB,CAAA,GAAAH,EAAAO,OAAAL,EAAAK,MAAA,CAAA,EAExC,OADAC,aAAeC,CAAGL,EACZM,EAAWC,KAAMC,CACvBJ,CADyC,MAAGR,GAASO,QAAQL,MAAAA,uBAAWK,CAAAA,CACxEC,CAMR,QAZsBV,oBAYtB","file":"httpRequests.min.js","sourcesContent":["//Make Request\nexport async function fetchDataWithTimeout(resource, options = {}) {\n    try {\n        const {timeout = 8000} = options;\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=> controller.abort , timeout);\n        const response = await fetch(resource, { ...options, signal: controller.signal });\n        clearTimeout(timeoutId);\n        return response.json();\n    } catch (error) {\n        console.error('Error fetching cats:', error);\n        //TODO:request recovery\n    }\n}"]}